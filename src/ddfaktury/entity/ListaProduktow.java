package ddfaktury.entity;
// Generated 2012-02-19 15:58:25 by Hibernate Tools 3.2.1.GA

import ddfaktury.ui.Out;
import ddfaktury.utils.HibernateUtil;
import java.util.List;
import java.util.Vector;
import org.hibernate.Query;
import org.hibernate.Session;
import ddfaktury.ui.Error;



/**
 * ListaProduktow generated by hbm2java
 */
public class ListaProduktow  implements java.io.Serializable {


     private Integer id;
     private Produkty produkty;
     private Faktury faktury;
     private int ilosc;
     private double cena;

    public ListaProduktow() {
    }

    public ListaProduktow(Produkty produkty, Faktury faktury, int ilosc, double cena) {
       this.produkty = produkty;
       this.faktury = faktury;
       this.ilosc = ilosc;
       this.cena = cena;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Produkty getProdukty() {
        return this.produkty;
    }
    
    public void setProdukty(Produkty produkty) {
        this.produkty = produkty;
    }
    public Faktury getFaktury() {
        return this.faktury;
    }
    
    public void setFaktury(Faktury faktury) {
        this.faktury = faktury;
    }
    public int getIlosc() {
        return this.ilosc;
    }
    
    public void setIlosc(int ilosc) {
        this.ilosc = ilosc;
    }
    public double getCena() {
        return this.cena;
    }
    
    public void setCena(double cena) {
        this.cena = cena;
    }


public static List<ListaProduktow> getAll() {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List result = session.createQuery("from ListaProduktow").list();
        session.getTransaction().commit();
        return result;
        }

        public static Vector<ListaProduktow> getAllAsVector() {
            Vector tableData = new Vector();
//            Session session = HibernateUtil.getSessionFactory().getCurrentSession();
//            session.beginTransaction();

            for(ListaProduktow o : getAll()) {
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(o.getId());
            oneRow.add(o.getFaktury());
            oneRow.add(o.getProdukty());
            oneRow.add(o.getIlosc());
            oneRow.add(o.getCena());
            tableData.add(oneRow);
            }
//            session.getTransaction().commit();
            return tableData;
        }

        public static int getNewId() {
            Session session = HibernateUtil.getSessionFactory().getCurrentSession();
            session.beginTransaction();
            List<Faktury> result = session.createQuery("from listaProduktow order by(id)").list();
            session.getTransaction().commit();
            if(result.size()==0)
                return 0;
            else
                return (result.get(result.size()-1).getId()+1);
        }

    public static Faktury getByID(int numer) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Faktury> result = session.createQuery("from ListaProduktow where id="+numer).list();
        session.getTransaction().commit();
        return result.get(0);
    }

        public static List<ListaProduktow> getAllByID(int numer) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<ListaProduktow> result = session.createQuery("from ListaProduktow where faktura="+numer).list();
        session.getTransaction().commit();
        return result;
    }

    public static void deleteByID(int numer) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        Query query = session.createQuery("delete from listaProduktow where id = "+numer);
        int rowCount = query.executeUpdate();
    }

    public static void add(Produkty produkty, Faktury faktury, int ilosc, double cena) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();

        ListaProduktow lp = new ListaProduktow(produkty, faktury, ilosc, cena);
        session.save(lp);

        session.getTransaction().commit();
    }

    //public static Sprzedawca update(int id, String nazwa, String miejscowosc, String kod, String adres, String nip){
    public static void update(int id, String nazwa, String pkwiu, String jednostka, int vat, double cena){
        try{
            Session session = HibernateUtil.getSessionFactory().getCurrentSession();
            session.beginTransaction();

            Produkty pr = new Produkty(nazwa, pkwiu, jednostka, vat, cena);
            pr.setId(id);

            session.update(pr);
            session.getTransaction().commit();
            Out.println("UpdateÂ successfully!");
            }catch(Exception e){
                Error.println(e);
            }
    }        

    public static Double getPriceByName(String nazwa) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Produkty> result = session.createQuery("from Produkty where nazwa='"+nazwa+"'").list();
        session.getTransaction().commit();
        return result.get(0).getCena();
    }

    public static Integer getVATByName(String nazwa) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Produkty> result = session.createQuery("from Produkty where nazwa='"+nazwa+"'").list();
        session.getTransaction().commit();
        return result.get(0).getVat();
    }

    public static String getPKWiUByName(String nazwa) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Produkty> result = session.createQuery("from Produkty where nazwa like'"+nazwa+"'").list();
        session.getTransaction().commit();
        return result.get(0).getPkwiu();
    }

    public static String getUnitByName(String nazwa) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        session.beginTransaction();
        List<Produkty> result = session.createQuery("from Produkty where nazwa like'"+nazwa+"'").list();
        session.getTransaction().commit();
        return result.get(0).getJednostka();
    }
}


